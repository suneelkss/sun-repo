package com.marta.admin.dao;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

import org.hibernate.Session;
import org.hibernate.Transaction;

import com.marta.admin.dto.BcwtPatronDTO;
import com.marta.admin.dto.BcwtSearchDTO;
import com.marta.admin.hibernate.BcwtPatron;
import com.marta.admin.hibernate.BcwtPatronType;
import com.marta.admin.hibernate.BcwtPwdVerifiy;
import com.marta.admin.utils.BcwtsLogger;
import com.marta.admin.utils.Constants;
import com.marta.admin.utils.Util;

public class ManageAdminDAO extends MartaBaseDAO{
	
	final String ME = "ManageAdminDAO";
	
	/**
	 * Method to get patron user list
	 * @param patronId
	 * @return
	 * @throws Exception
	 */
	public List getUserDetailList(Long patronId,String roleId)throws Exception{
		
		final String MY_NAME = ME + " getUserDetailList: ";
		BcwtsLogger.debug(MY_NAME + " to get user detail list ");
		List userDetailList = new ArrayList();
		Transaction transaction = null;
		Session session = null;
		try {
			BcwtsLogger.debug(MY_NAME + "Get Session");
			session = getSession();
			BcwtsLogger.debug(MY_NAME + " Got Session");
			transaction = session.beginTransaction();
			BcwtsLogger.debug(MY_NAME + " Execute Query");	
			
			 String query = "from BcwtPatron bcwtpatron where bcwtpatron.patronid is not null " +
			"and bcwtpatron.activestatus = '"+Constants.ONE+"' ";
			if(Util.equalsIgnoreCase(roleId,Constants.MARTA_SUPREME_ADMIN)||
					Util.equalsIgnoreCase(roleId,Constants.MARTA_IT_ADMIN)){
				query = query + " and (bcwtpatron.bcwtpatrontype.patrontypeid = " +
				"'"+Constants.MARTA_READONLY+"' or bcwtpatron.bcwtpatrontype.patrontypeid = " +
						"'"+Constants.MARTA_ADMIN+"' or bcwtpatron.bcwtpatrontype.patrontypeid = " +
								"'"+Constants.MARTA_SUPER_ADMIN+"')";
			}else{
				query = query + " and (bcwtpatron.bcwtpatrontype.patrontypeid " +
				" = '"+Constants.MARTA_READONLY+"' or bcwtpatron.bcwtpatrontype.patrontypeid " +
				" = '"+Constants.MARTA_ADMIN+"') ";
			}
			List patronUserList = session.createQuery(query).list();
			
			for (Iterator iter = patronUserList.iterator(); iter.hasNext();){
				BcwtPatron bcwtPatron = (BcwtPatron) iter.next();
				BcwtPatronDTO bcwtPatronDTO = new BcwtPatronDTO();
				if(null!=bcwtPatron.getPatronid()){					
					bcwtPatronDTO.setPatronid(bcwtPatron.getPatronid());
				}
				
				if(null!=bcwtPatron.getBcwtpatrontype().getPatrontypeid()){					
					bcwtPatronDTO.setBcwtusertypeid(bcwtPatron.getBcwtpatrontype().getPatrontypeid());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getFirstname())){					
					bcwtPatronDTO.setFirstname(bcwtPatron.getFirstname());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getLastname())){					
					bcwtPatronDTO.setLastname(bcwtPatron.getLastname());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getMiddlename())){					
					bcwtPatronDTO.setMiddlename(bcwtPatron.getMiddlename());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getEmailid())){					
					bcwtPatronDTO.setEmailid(bcwtPatron.getEmailid());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getPatronpassword())){					
					bcwtPatronDTO.setPatronpassword(bcwtPatron.getPatronpassword());
				}
				
				if(null!=bcwtPatron.getPhonenumber()){					
					bcwtPatronDTO.setPhonenumber(bcwtPatron.getPhonenumber());
				}
				
				if(null!=bcwtPatron.getDateofbirth()){					
					bcwtPatronDTO.setDateofbirth(bcwtPatron.getDateofbirth());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getIsautogenerated())){					
					bcwtPatronDTO.setIsautogenerated(bcwtPatron.getIsautogenerated());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getLockstatus())){					
					bcwtPatronDTO.setLockstatus(bcwtPatron.getLockstatus());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getActivestatus())){					
					bcwtPatronDTO.setActivestatus(bcwtPatron.getActivestatus());
				}
				
				if(null!=bcwtPatron.getLastlogin()){					
					bcwtPatronDTO.setLastlogintime(bcwtPatron.getLastlogin().toString());
				}
				
				if(null!=bcwtPatron.getParentpatronid()){					
					bcwtPatronDTO.setParentpatronid(bcwtPatron.getParentpatronid());
				}						
				userDetailList.add(bcwtPatronDTO);
			}
			transaction.commit();
			session.flush();
		} catch (Exception ex) {
			BcwtsLogger.error(MY_NAME + ex.getMessage());
			throw ex;
		}finally {
			closeSession(session, transaction);
			BcwtsLogger.debug(MY_NAME + " Resources closed");
		}
		return userDetailList;
	}
	
	
	/**
	 * Method to get patron details
	 * @param patronId
	 * @return
	 * @throws Exception
	 */
	public BcwtPatronDTO getPatronDetails(Long patronId)throws Exception{
		
		final String MY_NAME = ME + " getUserDetailList: ";
		BcwtsLogger.debug(MY_NAME + " to get user detail list ");	
		Transaction transaction = null;
		Session session = null;		
		SimpleDateFormat formatter1 = new SimpleDateFormat(Constants.DATE_FORMAT);
		BcwtPatronDTO bcwtPatronDTO = new BcwtPatronDTO();
		try {
			BcwtPatron bcwtPatron = new BcwtPatron();
			BcwtsLogger.debug(MY_NAME + "Get Session");
			session = getSession();
			BcwtsLogger.debug(MY_NAME + " Got Session");
			transaction = session.beginTransaction();
			BcwtsLogger.debug(MY_NAME + " Execute Query");
			String query= "from BcwtPatron where patronid = "+patronId;
			bcwtPatron =  (BcwtPatron) session.createQuery(query).uniqueResult();
			
			if(bcwtPatron!=null){				
				if(null!=bcwtPatron.getPatronid()){					
					bcwtPatronDTO.setPatronid(bcwtPatron.getPatronid());
				}
				
				if(null!=bcwtPatron.getBcwtpatrontype().getPatrontypeid()){					
					bcwtPatronDTO.setBcwtusertypeid(bcwtPatron.getBcwtpatrontype().getPatrontypeid());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getFirstname())){					
					bcwtPatronDTO.setFirstname(bcwtPatron.getFirstname());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getLastname())){					
					bcwtPatronDTO.setLastname(bcwtPatron.getLastname());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getMiddlename())){					
					bcwtPatronDTO.setMiddlename(bcwtPatron.getMiddlename());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getEmailid())){					
					bcwtPatronDTO.setEmailid(bcwtPatron.getEmailid());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getPatronpassword())){					
					bcwtPatronDTO.setPatronpassword(bcwtPatron.getPatronpassword());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getPhonenumber())){					
					bcwtPatronDTO.setPhonenumber(bcwtPatron.getPhonenumber());
				}
				
				if(null!=bcwtPatron.getDateofbirth()){
					String formattedDate = new SimpleDateFormat(Constants.DATE_FORMAT)
					.format(bcwtPatron.getDateofbirth());
					
					bcwtPatronDTO.setDateofbirth(formatter1.parse(formattedDate));
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getIsautogenerated())){					
					bcwtPatronDTO.setIsautogenerated(bcwtPatron.getIsautogenerated());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getLockstatus())){					
					bcwtPatronDTO.setLockstatus(bcwtPatron.getLockstatus());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getActivestatus())){					
					bcwtPatronDTO.setActivestatus(bcwtPatron.getActivestatus());
				}				
				
				if(null!=bcwtPatron.getLastlogin()){					
					bcwtPatronDTO.setLastlogintime(bcwtPatron.getLastlogin().toString());
				}
				
				if(null!=bcwtPatron.getBcwtpatrontype().getPatrontypeid()){					
					bcwtPatronDTO.setRole(bcwtPatron.getBcwtpatrontype().getPatrontypeid().toString());
				}
				
				if(null!=bcwtPatron.getParentpatronid()){					
					bcwtPatronDTO.setParentpatronid(bcwtPatron.getParentpatronid());
				}
			}
			transaction.commit();
			session.flush();			
		}
		 catch (Exception ex) {
			BcwtsLogger.error(MY_NAME + Util.getFormattedStackTrace(ex));
			throw ex;
		}finally {
			closeSession(session, transaction);
			BcwtsLogger.debug(MY_NAME + " Resources closed");
		}
		return bcwtPatronDTO;
	}
	
	/**
	 * Method to add new patrron details
	 * @param bcwtPatronDTO
	 * @return
	 * @throws Exception
	 */
	public String addPatron(BcwtPatronDTO bcwtPatronDTO)throws Exception{
		
		final String MY_NAME = ME + " addPatron: ";
		BcwtsLogger.debug(MY_NAME + " to add patron user details");		
		Transaction transaction = null;
		Session session = null;
		BcwtPatron bcwtPatron = null;
		String check="";
		try {
			BcwtPatron checkBcwtPatron = null;
			if(!Util.isBlankOrNull(bcwtPatronDTO.getEmailid())){
				session = getSession();
				BcwtsLogger.info("Got the session");
				transaction = session.beginTransaction();
				BcwtsLogger.info("Got the transaction");
				checkBcwtPatron = new BcwtPatron();
				
				String query = "from BcwtPatron bcwtpatron where  " +
					"bcwtpatron.emailid = '"+bcwtPatronDTO.getEmailid().trim().toLowerCase()+"'";				
				checkBcwtPatron = (BcwtPatron) session.createQuery(query).uniqueResult();				
				transaction.commit();
				session.flush();
				session.close();
			}
			
			if(checkBcwtPatron == null){
				session = getSession();
				BcwtsLogger.info("Got the session");
				transaction = session.beginTransaction();
				BcwtsLogger.info("Got the transaction");
				bcwtPatron = new BcwtPatron();
				
				if(!Util.isBlankOrNull(bcwtPatronDTO.getFirstname())){
					bcwtPatron.setFirstname(bcwtPatronDTO.getFirstname());				
				}
				
				if(!Util.isBlankOrNull(bcwtPatronDTO.getLastname())){
					bcwtPatron.setLastname(bcwtPatronDTO.getLastname());				
				}
				
				if(!Util.isBlankOrNull(bcwtPatronDTO.getMiddlename())){
					bcwtPatron.setMiddlename(bcwtPatronDTO.getMiddlename());				
				}
				
				if(!Util.isBlankOrNull(bcwtPatronDTO.getEmailid())){
					bcwtPatron.setEmailid(bcwtPatronDTO.getEmailid());				
				}
				
				if(!Util.isBlankOrNull(bcwtPatronDTO.getRole())){
					BcwtPatronType bcwtPatronType = new BcwtPatronType();
					bcwtPatronType.setPatrontypeid(new Long(bcwtPatronDTO.getRole()));
					bcwtPatron.setBcwtpatrontype(bcwtPatronType);				
				}
				
				if(!Util.isBlankOrNull(bcwtPatronDTO.getIsautogenerated())){					
					bcwtPatron.setIsautogenerated(bcwtPatronDTO.getIsautogenerated());
				}
				
				if(bcwtPatronDTO.getParentpatronid()!=null){
					bcwtPatron.setParentpatronid(bcwtPatronDTO.getParentpatronid());				
				}
				
				if(!Util.isBlankOrNull(bcwtPatronDTO.getPatronpassword())){
					bcwtPatron.setPatronpassword(bcwtPatronDTO.getPatronpassword());				
				}
				
				if(!Util.isBlankOrNull(bcwtPatronDTO.getPhonenumber())){
					bcwtPatron.setPhonenumber(bcwtPatronDTO.getPhonenumber());				
				}
				if(null !=bcwtPatronDTO.getDateofbirth()){
				if(!Util.isBlankOrNull(bcwtPatronDTO.getDateofbirth().toString())){
					
					bcwtPatron.setDateofbirth(bcwtPatronDTO.getDateofbirth());				
				}}
				if(!Util.isBlankOrNull(bcwtPatronDTO.getLockstatus())){
					bcwtPatron.setLockstatus(bcwtPatronDTO.getLockstatus());				
				}
				
				if(!Util.isBlankOrNull(bcwtPatronDTO.getActivestatus())){
					bcwtPatron.setActivestatus(bcwtPatronDTO.getActivestatus());				
				}
				
				if(bcwtPatronDTO.getLogincount()!=null){
					bcwtPatron.setLogincount(new Long(bcwtPatronDTO.getLogincount().toString()));				
				}
				
				if(bcwtPatronDTO.getLastlogintime()!=null){
					bcwtPatron.setLastlogin(Util.convertStringToDate
							(bcwtPatronDTO.getLastlogintime()));				
				}			
				
				bcwtPatron.setLastlogin(Util.convertStringToDate(Util.getCurrentDateAndTime()));
				
				session.save(bcwtPatron);
				transaction.commit();
				session.flush();							
				check=Constants.SUCCESS;
			  } else if(checkBcwtPatron.getActivestatus().equals(Constants.IN_ACTIVE_STATUS)){
				  session = getSession();
					BcwtsLogger.info("Got the session");
					transaction = session.beginTransaction();
					BcwtsLogger.info("Got the transaction");
					if(!Util.isBlankOrNull(bcwtPatronDTO.getRole())){
						BcwtPatronType bcwtPatronType = new BcwtPatronType();
						bcwtPatronType.setPatrontypeid(new Long(bcwtPatronDTO.getRole()));
						checkBcwtPatron.setBcwtpatrontype(bcwtPatronType);				
					}
					checkBcwtPatron.setActivestatus(Constants.ACTIVE_STATUS);
					
					session.update(checkBcwtPatron);
					transaction.commit();
					session.flush();							
					check=Constants.SUCCESS;
					
				  
			  }
			
		else{
				check = Constants.WARNING;
			}
			
		} catch (Exception ex) {
			BcwtsLogger.error(MY_NAME + Util.getFormattedStackTrace(ex));
			throw ex;
		}finally {
			closeSession(session, transaction);
			BcwtsLogger.debug(MY_NAME + " Resources closed");
		}
		return check;
	}
	
	
	
	/**
	 * Method to update patrron details
	 * @param bcwtPatronDTO
	 * @return
	 * @throws Exception
	 */
	public boolean updatePatron(BcwtPatronDTO bcwtPatronDTO)throws Exception{
		
		final String MY_NAME = ME + " updatePatron: ";
		BcwtsLogger.debug(MY_NAME + " to update patron user details");		
		Transaction transaction = null;
		Session session = null;		 
		boolean isUpdate = false;		
		try {
			session = getSession();
			BcwtsLogger.info("Got the session");
			transaction = session.beginTransaction();
			BcwtsLogger.info("Got the transaction");
			
			String query = "from BcwtPatron where patronid="+bcwtPatronDTO.getPatronid();
			BcwtPatron bcwtPatron = (BcwtPatron) session.createQuery(query).uniqueResult();
			
			if(bcwtPatronDTO.getFirstname()!=null){
				bcwtPatron.setFirstname(bcwtPatronDTO.getFirstname());				
			}
			
			if(bcwtPatronDTO.getLastname()!=null){
				bcwtPatron.setLastname(bcwtPatronDTO.getLastname());				
			}
			
			if(bcwtPatronDTO.getMiddlename()!=null){
				bcwtPatron.setMiddlename(bcwtPatronDTO.getMiddlename());				
			}
			
			if(bcwtPatronDTO.getPhonenumber()!=null){
				bcwtPatron.setPhonenumber(bcwtPatronDTO.getPhonenumber());				
			}
			
			if(bcwtPatronDTO.getDateofbirth()!=null){
				bcwtPatron.setDateofbirth(bcwtPatronDTO.getDateofbirth());				
			}	
			
			if(!Util.isBlankOrNull(bcwtPatronDTO.getRole())){
				BcwtPatronType bcwtPatronType = new BcwtPatronType();
				bcwtPatronType.setPatrontypeid(new Long(bcwtPatronDTO.getRole()));
				bcwtPatron.setBcwtpatrontype(bcwtPatronType);				
			}
			session.update(bcwtPatron);
			isUpdate= true;
			transaction.commit();
			session.flush();		
		} catch (Exception ex) {
			BcwtsLogger.error(MY_NAME + ex.getMessage());
			throw ex;
		}finally {
			closeSession(session, transaction);
			BcwtsLogger.debug(MY_NAME + " Resources closed");
		}
		return isUpdate;
	}
	
	
	/**
	 * Method to delete a patron details
	 * @param bcwtPatronDTO
	 * @return
	 * @throws Exception
	 */
	public boolean deletePatron(Long patronId)throws Exception{
		
		final String MY_NAME = ME + " deletePatron: ";
		BcwtsLogger.debug(MY_NAME + " to delete a patron user details");		
		Transaction transaction = null;
		Session session = null;		
		boolean isDeleted = false;
		try {
			Long verifyId = new Long(0);
			boolean isRemoved = false;
			session = getSession();
			BcwtsLogger.info("Got the session");
			transaction = session.beginTransaction();
			BcwtsLogger.info("Got the transaction");
			String query = "select bcwtpwdverifiy.pwdverifyid from BcwtPwdVerifiy bcwtpwdverifiy where " +
					"bcwtpwdverifiy.bcwtpatron.patronid = '"+ patronId +"' ";
			verifyId = (Long) session.createQuery(query).uniqueResult();
			transaction.commit();
			session.flush();
			session.close();			
			if(verifyId!=null){
				session = getSession();
				transaction = session.beginTransaction();
				BcwtPwdVerifiy bcwtPwdVerifiy = (BcwtPwdVerifiy) session.load
					(BcwtPwdVerifiy.class, verifyId);
				session.delete(bcwtPwdVerifiy);		
				transaction.commit();
				session.flush();
				session.close();
				isRemoved = true;	
			}			
			if(isRemoved || verifyId==null){
				session = getSession();
				transaction = session.beginTransaction();
				BcwtPatron bcwtPatron =(BcwtPatron) session.load
						(BcwtPatron.class, patronId);
				bcwtPatron.setActivestatus(Constants.ZERO);				
				session.update(bcwtPatron);
				transaction.commit();
				session.flush();			
				isDeleted = true;				
			}
		}catch (Exception ex) {
			BcwtsLogger.error(MY_NAME + ex.getMessage());
			throw ex;
		}finally {
			closeSession(session, transaction);
			BcwtsLogger.debug(MY_NAME + " Resources closed");
		}
		return isDeleted;
	}
	
	
	/**
	 * Method to delete a patrron details
	 * @param bcwtPatronDTO
	 * @return
	 * @throws Exception
	 */
	public List searchAdminUser(BcwtSearchDTO bcwtSearchDTO, 
			Long patronId,String roleId)throws Exception{
		
		final String MY_NAME = ME + " deletePatron: ";
		BcwtsLogger.debug(MY_NAME + " to delete a patron user details");		
		Transaction transaction = null;
		Session session = null;				
		List searchedAdminList = new ArrayList();
		
		try {			
			session = getSession();
			transaction = session.beginTransaction();
			BcwtsLogger.info("Got the session");
			transaction = session.beginTransaction();
			BcwtsLogger.info("Got the transaction");
			String fistName = "";
			String  middleName= "";
			String lastName = "";		
			String email = "";	
			String query = "";
			List searchUserList = new ArrayList();
			
			if(!Util.isBlankOrNull(bcwtSearchDTO.getAdminSearchEmail())){
				email = bcwtSearchDTO.getAdminSearchEmail();
			}
			
			if(!Util.isBlankOrNull(bcwtSearchDTO.getAdminSearchFirstName())){
				fistName = bcwtSearchDTO.getAdminSearchFirstName();
			}
			
			if(!Util.isBlankOrNull(bcwtSearchDTO.getAdminSearchLastName())){
				lastName = bcwtSearchDTO.getAdminSearchLastName();
			}
			
			if(!Util.isBlankOrNull(bcwtSearchDTO.getAdminSearchMiddleName())){
				middleName = bcwtSearchDTO.getAdminSearchMiddleName();
			}
			query = "from BcwtPatron bcwtpatron where bcwtpatron.patronid is not null " +
					"and bcwtpatron.activestatus = '"+Constants.ONE+"' ";
		
	
			if (!Util.isBlankOrNull(email)) {
				query = query + " and lower(bcwtpatron.emailid) like '"
				+ email.trim().toLowerCase() + "%'";
			}
			
			if (!Util.isBlankOrNull(fistName)) {
				query = query + " and lower(bcwtpatron.firstname) like '"
				+ fistName.trim().toLowerCase() + "%'";
			}			
			
			if (!Util.isBlankOrNull(lastName)) {
				query = query + " and lower(bcwtpatron.lastname) like '"
				+ lastName.trim().toLowerCase() + "%'";
			}
			
			if (!Util.isBlankOrNull(middleName)) {
				query = query + " and lower(bcwtpatron.middlename) like '"
				+ middleName.trim().toLowerCase() + "%'";
			}
			
			if(Util.equalsIgnoreCase(roleId,Constants.MARTA_SUPREME_ADMIN)||
					Util.equalsIgnoreCase(roleId,Constants.MARTA_IT_ADMIN)){				
				query = query + " and (bcwtpatron.bcwtpatrontype.patrontypeid = " +
				"'"+Constants.MARTA_READONLY+"' or bcwtpatron.bcwtpatrontype.patrontypeid = " +
						"'"+Constants.MARTA_ADMIN+"' or bcwtpatron.bcwtpatrontype.patrontypeid = " +
								"'"+Constants.MARTA_SUPER_ADMIN+"')";
			}else{
				query = query + " and (bcwtpatron.bcwtpatrontype.patrontypeid " +
						" = '"+Constants.MARTA_READONLY+"' or bcwtpatron.bcwtpatrontype.patrontypeid " +
						" = '"+Constants.MARTA_ADMIN+"') ";
			}
			
			searchUserList = session.createQuery(query).list();
			
			for (Iterator iter = searchUserList.iterator(); iter.hasNext();) {

				BcwtPatron bcwtPatron = (BcwtPatron) iter.next();
				
				BcwtPatronDTO bcwtPatronDTO = new BcwtPatronDTO();
				if(null!=bcwtPatron.getPatronid()){					
					bcwtPatronDTO.setPatronid(bcwtPatron.getPatronid());
				}
				
				if(null!=bcwtPatron.getBcwtpatrontype().getPatrontypeid()){					
					bcwtPatronDTO.setBcwtusertypeid(bcwtPatron.getBcwtpatrontype().getPatrontypeid());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getFirstname())){					
					bcwtPatronDTO.setFirstname(bcwtPatron.getFirstname());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getLastname())){					
					bcwtPatronDTO.setLastname(bcwtPatron.getLastname());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getMiddlename())){					
					bcwtPatronDTO.setMiddlename(bcwtPatron.getMiddlename());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getEmailid())){					
					bcwtPatronDTO.setEmailid(bcwtPatron.getEmailid());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getPatronpassword())){					
					bcwtPatronDTO.setPatronpassword(bcwtPatron.getPatronpassword());
				}
				
				if(null!=bcwtPatron.getPhonenumber()){					
					bcwtPatronDTO.setPhonenumber(bcwtPatron.getPhonenumber());
				}
				
				if(null!=bcwtPatron.getDateofbirth()){					
					bcwtPatronDTO.setDateofbirth(bcwtPatron.getDateofbirth());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getIsautogenerated())){					
					bcwtPatronDTO.setIsautogenerated(bcwtPatron.getIsautogenerated());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getLockstatus())){					
					bcwtPatronDTO.setLockstatus(bcwtPatron.getLockstatus());
				}
				
				if(!Util.isBlankOrNull(bcwtPatron.getActivestatus())){					
					bcwtPatronDTO.setActivestatus(bcwtPatron.getActivestatus());
				}				
				
				if(null!=bcwtPatron.getLastlogin()){					
					bcwtPatronDTO.setLastlogintime(bcwtPatron.getLastlogin().toString());
				}
				
				if(null!=bcwtPatron.getParentpatronid()){					
					bcwtPatronDTO.setParentpatronid(bcwtPatron.getParentpatronid());
				}						
				searchedAdminList.add(bcwtPatronDTO);
			}
			
		}catch (Exception ex) {
			BcwtsLogger.error(MY_NAME + ex.getMessage());
			throw ex;
		}finally {
			closeSession(session, transaction);
			BcwtsLogger.debug(MY_NAME + " Resources closed");
		}
		return searchedAdminList;
	}
	
	/**
	 * check the user name for partner sales
	 * @param emailId
	 * @param patronId
	 * @return
	 * @throws Exception
	 */
	public boolean checkUserName(String userName)
			throws Exception {
		final String MY_NAME = ME + "checkUserName: ";
		BcwtsLogger.debug(MY_NAME);
		boolean isAvailable = false;
		Session session = null;
		Transaction transaction = null;
		try {
			session = getSession();
			transaction = session.beginTransaction();
			String query = "from BcwtPatron where activestatus = '1' and emailid = '"
					+ userName + "'";
			
			List prtnerListToIterate = session.createQuery(query).list();
			if (prtnerListToIterate.size() > 0) {
				isAvailable = true;
			}
			transaction.commit();
			session.flush();
			BcwtsLogger.info(MY_NAME + "is user name already exists : "
					+ isAvailable);
		} catch (Exception ex) {
			BcwtsLogger.error(MY_NAME + ex.getMessage());
			throw ex;
		} finally {
			closeSession(session, transaction);
			BcwtsLogger.debug(MY_NAME + " Resources closed");
		}
		return isAvailable;
	}
		
}
