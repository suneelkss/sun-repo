package com.marta.admin.business;

import java.util.Date;

import com.marta.admin.dao.PatronDAO;
import com.marta.admin.dto.BcwtConfigParamsDTO;
import com.marta.admin.exceptions.MartaConstants;
import com.marta.admin.exceptions.MartaException;
import com.marta.admin.forms.SignupForm;
import com.marta.admin.hibernate.BcwtPatron;
import com.marta.admin.hibernate.BcwtPatronType;
import com.marta.admin.hibernate.BcwtPwdVerifiy;
import com.marta.admin.hibernate.BcwtSecretQuestions;
import com.marta.admin.utils.Base64EncodeDecodeUtil;
import com.marta.admin.utils.BcwtsLogger;
import com.marta.admin.utils.Constants;
import com.marta.admin.utils.PropertyReader;
import com.marta.admin.utils.SendMail;
import com.marta.admin.utils.Util;


/**
 * This business class is manage the patrons.
 * 
 * @author admin
 */

public class AdminSalesPatron implements Patron {

	final String ME = "GbsSalesPatron: ";

	
	/**
	 * Method to add patrons.
	 * 
	 * @param signUpForm -
	 *            SignupForm
	 * @param basePath -
	 *            String
	 * @return boolean
	 */
	public boolean addPatron(SignupForm signUpForm, String basePath)
			throws MartaException {
		final String MY_NAME = ME + " addPatron: ";
		BcwtsLogger.debug(MY_NAME + " adding patron details");
		String userEmail = "";
		String password = Util.generatePassword(6);
		boolean isUserSaved = false;
		String phoneNumber = null;
		try {
			PatronDAO patronDAO = new PatronDAO();
			// to add patron object
			userEmail = signUpForm.getEmail().trim();
			BcwtPatron bctwPatron = new BcwtPatron();
			bctwPatron.setFirstname(signUpForm.getFirstName().trim());
			bctwPatron.setMiddlename(signUpForm.getMiddleName().trim());
			bctwPatron.setLastname(signUpForm.getLastName().trim());
			bctwPatron.setEmailid(userEmail.trim());
			bctwPatron.setIsautogenerated(Constants.YES);
			bctwPatron.setLogincount(new Long(0));
			bctwPatron.setPatronpassword(Base64EncodeDecodeUtil
					.encodeString(password));
			
			BcwtPatronType bcwtpatrontype = new BcwtPatronType();
			
			
			bcwtpatrontype.setPatrontypeid(new Long(signUpForm.getPatronTypeName().trim()));
			
			
			
			bctwPatron.setBcwtpatrontype(bcwtpatrontype);
			bctwPatron.setActivestatus(Constants.ACTIVE_STATUS);
			bctwPatron.setLockstatus(Constants.NO);
			bctwPatron.setLastlogin(new Date());
			phoneNumber = signUpForm.getPhoneNumberOne()+signUpForm.getPhoneNumberTwo()+signUpForm.getPhoneNumberThree();
			System.out.println("phone no1"+signUpForm.getPhoneNumberOne());
			System.out.println("phonnum"+phoneNumber);
			bctwPatron.setPhonenumber(phoneNumber);
			if (null != signUpForm.getParentpatronid()
					&& !signUpForm.getParentpatronid().equals("")) {
				bctwPatron.setParentpatronid(Long.valueOf(signUpForm
						.getParentpatronid()));
			}

			patronDAO.addOrUpdatePatron(bctwPatron);

			// to add secret questions and answer details
			if (signUpForm.isSignup()) {
				BcwtPwdVerifiy bcwtPwdVerifiy = new BcwtPwdVerifiy();
				bcwtPwdVerifiy.setAnswer(signUpForm.getSecretAnswer().trim());
				BcwtSecretQuestions bcwtSecretQuestions = new BcwtSecretQuestions();
				bcwtSecretQuestions.setSecretquestionid(Long.valueOf(signUpForm
						.getSecretQuestion()));
				bcwtPwdVerifiy.setBcwtsecretquestions(bcwtSecretQuestions);
				bcwtPwdVerifiy.setBcwtpatron(bctwPatron);
				patronDAO.addPatronSecretAnswer(bcwtPwdVerifiy);
			}

			isUserSaved = true;
			// send mail with password

			ConfigurationCache configurationCache = new ConfigurationCache();
			BcwtConfigParamsDTO smtpPathDTO = (BcwtConfigParamsDTO) configurationCache.configurationValues
					.get("SMTP_SERVER_PATH");
			BcwtConfigParamsDTO fromDTO = (BcwtConfigParamsDTO) configurationCache.configurationValues
					.get("WEBMASTER_MAIL_ID");
			String content = PropertyReader
					.getValue(Constants.SIGN_UP_MAIL_CONTENT);
			
			String name = null;
			if(null != signUpForm && 
					!Util.isBlankOrNull(signUpForm.getFirstName())) {
				name = signUpForm.getFirstName().trim();
				if (null != signUpForm
						&& !Util.isBlankOrNull(signUpForm.getMiddleName())) {
					name = name + " " + signUpForm.getMiddleName().trim();
				}
				if (null != signUpForm
						&& !Util.isBlankOrNull(signUpForm.getLastName())) {
					name = name + " " + signUpForm.getLastName().trim();
				}
			}			
			if (!Util.isBlankOrNull(name)) {
				content = content.replaceAll("\\$USERNAME", name);
			} else {
				content = content.replaceAll("\\$USERNAME", "Subscriber");
			}			
			content = content.replaceAll("\\$PASSWORD", password);
			content = content.replaceAll("\\$PWDCONDITION", PropertyReader
					.getValue(Constants.PASSWORD_CONDITION));
			content = content.replaceAll("\\$MARTALOGIN", basePath);
			String imgPath = basePath + Constants.MARTA_LOGO;
			String imageContent = "<img src='" + imgPath + "'/>";
			content = content.replaceAll("\\$LOGOIMAGE", imageContent);
			BcwtConfigParamsDTO mailportDTO = (BcwtConfigParamsDTO) configurationCache.configurationValues
					.get(Constants.MAIL_PORT);
			BcwtConfigParamsDTO mailprotocolDTO = (BcwtConfigParamsDTO) configurationCache.configurationValues
					.get(Constants.MAIL_PROTOCOL);
			isUserSaved = true;
			SendMail.sendMail(fromDTO.getParamvalue(), userEmail, content,
					smtpPathDTO.getParamvalue(), PropertyReader
							.getValue(Constants.SIGN_UP_MAIL_SUBJECT), "",
					mailportDTO.getParamvalue(), mailprotocolDTO
							.getParamvalue());

			BcwtsLogger.info(MY_NAME + "Mail sent sucess");

		} catch (Exception e) {
			BcwtsLogger.error(MY_NAME + " Exception in adding patron :"
					+ e.getMessage());
			throw new MartaException(PropertyReader
					.getValue(MartaConstants.BCWTS_PATRON_ADDRESS_ADD));
		}
		return isUserSaved;
	}

	/**
	 * Method to update patrons.
	 * 
	 * @param signUpForm -
	 *            SignupForm
	 * @param patronId -
	 *            Long
	 * @param updatePassword -
	 *            boolean
	 * @param isAnswerUpdated -
	 *            boolean
	 * @return boolean
	 */
	public boolean updatePatron(SignupForm signUpForm, Long patronId,
			boolean updatePassword, boolean isAnswerUpdated)
			throws MartaException {
		final String MY_NAME = ME + " addPatron: ";
		BcwtsLogger.debug(MY_NAME + " adding patron details");
		boolean isUserUpdated = false;
		ConfigurationCache configurationCache = null;
		BcwtConfigParamsDTO configParamDTO = null;

		try {
			PatronDAO patronDAO = new PatronDAO();
			isUserUpdated = patronDAO.updatePatron(signUpForm, patronId,
					updatePassword, isAnswerUpdated);

			configurationCache = new ConfigurationCache();
			configParamDTO = (BcwtConfigParamsDTO) configurationCache.configurationValues
					.get(Constants.IS_MARTA_ENV);
			if ((Constants.YES)
					.equalsIgnoreCase(configParamDTO.getParamvalue())) {
				//NextFareMethods.updatePatronContactInfo(signUpForm, patronId);
			}
			BcwtsLogger.info(MY_NAME + "patron is updated :"+isUserUpdated);
		} catch (Exception e) {
			BcwtsLogger.error(MY_NAME + " Exception in updating patron :"
					+ e.getMessage());
			throw new MartaException(PropertyReader
					.getValue(MartaConstants.BCWTS_PATRON_ADDRESS_UPDATE));
		}
		return isUserUpdated;
	}

}